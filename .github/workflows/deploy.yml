name: Deploy MeshCentral

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload repo to server (staging dir)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "."
          target: "/opt/meshcentral-app.new"
          rm: true
          strip_components: 1

      - name: Bootstrap and restart MeshCentral (preserve data)
        uses: appleboy/ssh-action@v1.0.3
        env:
          NGINX_MANAGE: '1'
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail
            # Prepare staging
            [ -d /opt/meshcentral-app.new ] || { echo "Missing staging directory" >&2; exit 1; }
            systemctl stop meshcentral || true
            # Preserve existing data if present
            if [ -d /opt/meshcentral-app/meshcentral-data ]; then
              mkdir -p /opt/meshcentral-app.new/meshcentral-data
              rsync -a /opt/meshcentral-app/meshcentral-data/ /opt/meshcentral-app.new/meshcentral-data/
            fi
            # Bring in repo-managed plugins (version-controlled assets)
            if [ -d /opt/meshcentral-app.new/plugins ]; then
              mkdir -p /opt/meshcentral-app.new/meshcentral-data/plugins
              rsync -a /opt/meshcentral-app.new/plugins/ /opt/meshcentral-app.new/meshcentral-data/plugins/
            fi
            # Atomic switch
            if [ -d /opt/meshcentral-app ]; then mv /opt/meshcentral-app "/opt/meshcentral-app.prev.$(date +%Y%m%d%H%M%S)"; fi
            mv /opt/meshcentral-app.new /opt/meshcentral-app
            cd /opt/meshcentral-app
            bash scripts/remote/bootstrap.sh

      - name: Health check (backend and Nginx)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -euo pipefail
            echo "[health] Checking MeshCentral backend on 127.0.0.1:3000"
            curl -sSf -o /dev/null http://127.0.0.1:3000/ || { echo "Backend health check failed" >&2; systemctl status meshcentral --no-pager -l || true; exit 1; }
            CERT=$(jq -r '.settings.Cert // empty' /opt/meshcentral-app/meshcentral-data/config.json 2>/dev/null || echo '')
            if [ -z "${CERT}" ]; then CERT=localhost; fi
            if command -v nginx >/dev/null 2>&1; then
              echo "[health] Checking Nginx frontend at https://${CERT}/"
              CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://${CERT}/ || echo 000)
              if [ "$CODE" -ge 400 ] || [ "$CODE" = "000" ]; then
                echo "Nginx health check failed with code $CODE" >&2
                nginx -t || true
                tail -n 200 /var/log/nginx/error.log || true
                exit 1
              fi
            else
              echo "[health] Nginx not installed; skipping frontend check"
            fi
